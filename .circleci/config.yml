version: 2.1

orbs:
  haskell: haskell-works/haskell-build@4.0.5
  github: haskell-works/github-release@1.3.3
  hackage: haskell-works/hackage@1.2.0

executors:
  darwin:
    macos:
      xcode: 10.0

workflows:
  multiple-ghc-build:
    jobs:
      - haskell/build-with-cci-cache:
          name: Darwin
          executor: darwin
          run-tests: true
          fail-incoherent-builds: false
          write-result-workspace: true
          after-checkout:
            - restore_cache:
                keys:
                  - homebrew-itself-cache
            - run:
                name: Install Brew Dependencies
                command: brew install jq coreutils

            - save_cache:
                key: homebrew-itself-cache
                # I cache Homebrew itself, not the stuff that is installed with it
                # because brew update takes up to 4 minutes for some reason.
                paths: [/usr/local/Homebrew]

            - restore_cache:
                keys:
                  ghc-cache

            - run:
                name: Install GHC and Cabal
                command: |
                  sh ./.circleci/ghcup.sh
                  source ~/.bash_profile
                  ghcup install 8.6.5
                  ghcup install-cabal 2.4.1.0

            - save_cache:
                key: ghc-cache
                paths: [~/.ghcup]

            - run:
                name: Install cabal-plan
                command: |
                  curl -L https://github.com/haskell-works/cabal-plan/releases/download/v0.5.0.0/cabal-plan_x86_osx.tar.gz -o cabal-plan_x86_osx.tar.gz
                  tar zxvf cabal-plan_x86_osx.tar.gz -C /usr/local/bin cabal-plan
                  rm cabal-plan_x86_osx.tar.gz
  
      - haskell/build-with-binary-cache:
          name: GHC 8.4.4
          executor: haskell/ghc-8_4_4
          context: haskell-ci
          binary-cache-uri: ${BINARY_CACHE_URI-"http://hw-binary-cache-us-west-2-a.s3-website-us-west-2.amazonaws.com/archive"}
          cabal-build-extra: --write-ghc-environment-files=ghc8.4.4+
          cabal-test-extra: --test-show-details=direct

      - haskell/build-with-binary-cache:
          name: GHC 8.6.5
          executor: haskell/ghc-8_6_5
          context: haskell-ci
          binary-cache-uri: ${BINARY_CACHE_URI-"http://hw-binary-cache-us-west-2-a.s3-website-us-west-2.amazonaws.com/archive"}
          cabal-build-extra: --write-ghc-environment-files=ghc8.4.4+
          cabal-test-extra: --test-show-details=direct

      - haskell/build-with-binary-cache:
          name: GHC 8.8.2
          executor: haskell/ghc-8_8_2
          context: haskell-ci
          binary-cache-uri: ${BINARY_CACHE_URI-"http://hw-binary-cache-us-west-2-a.s3-website-us-west-2.amazonaws.com/archive"}
          cabal-build-extra: --write-ghc-environment-files=ghc8.4.4+
          cabal-test-extra: --test-show-details=direct
        
      - github/release-cabal:
          name: GitHub Release
          context: haskell-ci
          requires:
            - GHC 8.4.4
            - GHC 8.6.5
            - GHC 8.8.2
          checkout: true
          filters:
            branches:
              only: master

      - github/release-cabal:
          name: GitHub Release
          requires:
            - GHC 8.4.4
            - GHC 8.6.5
            - GHC 8.8.2
            # - Darwin
          checkout: true
          attach-workspace: true
          # source-env-file: ./build/project.env
          soft: false
          before-release:
            - run:
                name: Prepare environment for release
                command: |
                  tar zcvf /tmp/artefacts/${CIRCLE_PROJECT_REPONAME}_${BUILD_ARCH}_${BUILD_OS_NAME}.tar.gz ./build/dist/asif
          filters:
            branches:
              only: master

      - github/release-cabal:
          name: GitHub Release
          requires:
            - GHC 8.4.4
            - GHC 8.6.5
            - GHC 8.8.2
            # - Darwin
          checkout: true
          attach-workspace: true
          # source-env-file: ./build/project.env
          soft: false
          before-release:
            - run:
                name: Prepare environment for release
                command: |
                  tar zcvf /tmp/artefacts/${CIRCLE_PROJECT_REPONAME}_${BUILD_ARCH}_${BUILD_OS_NAME}.tar.gz ./build/dist/${CIRCLE_PROJECT_REPONAME}
          filters:
            branches:
              only: master

      # - hackage/upload:
      #     context: haskell-ci
      #     publish: true
      #     requires:
      #       - GitHub Release
      #     username: ${HACKAGE_USER}
      #     password: ${HACKAGE_PASS}
